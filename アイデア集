<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ERPアイデア一覧</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #fdf6ee;
    }
  </style>
</head>
<body class="bg-beige-50 font-sans text-gray-800">
  <!-- ヘッダー -->
  <header class="bg-beige-100 p-4 shadow">
    <div class="max-w-screen-md mx-auto flex justify-between items-center">
      <h1 class="text-xl font-semibold">ERPアイデア一覧</h1>
      <a href="index.html" class="text-sm text-blue-700 underline">記録画面に戻る</a>
    </div>
  </header>

  <!-- タイプ選択 -->
  <main class="max-w-screen-md mx-auto px-4 py-6">
    <section class="mb-6">
      <h2 class="text-lg font-semibold mb-2">強迫タイプを選んでください</h2>
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
        <button class="bg-beige-200 hover:bg-beige-300 rounded-xl p-3 shadow" onclick="filterCards('加害恐怖・確認強迫')">加害恐怖・確認強迫</button>
        <button class="bg-beige-200 hover:bg-beige-300 rounded-xl p-3 shadow" onclick="filterCards('不潔恐怖・洗浄強迫')">不潔恐怖・洗浄強迫</button>
        <button class="bg-beige-200 hover:bg-beige-300 rounded-xl p-3 shadow" onclick="filterCards('縁起強迫・不完全恐怖')">縁起強迫・不完全恐怖</button>
      </div>
    </section>

    <!-- アイデアカード -->
    <section id="card-container" class="space-y-4">
      <!-- JSで動的に生成 -->
    </section>
  </main>

  <!-- JSスクリプト -->
  <script>
    async function loadIdeas() {
      const res = await fetch("https://script.google.com/macros/s/AKfycbzR_uiX-7qlSG_woqbjA_pQCqAtvxqAwDBV5FJ_Rfx_2ey9hiyG1a8sOPNsmOf79GC6aw/exec");
      const ideas = await res.json();
      const container = document.getElementById("card-container");
      container.innerHTML = "";

      ideas.forEach(item => {
        const card = document.createElement("div");
        card.className = `card ${item.type} bg-white rounded-2xl shadow p-4`;
        card.innerHTML = `
          <h3 class="text-base font-semibold">課題：${item.task}</h3>
          <button onclick="this.nextElementSibling.classList.toggle('hidden')" class="text-sm text-blue-600 underline">詳細を表示</button>
          <div class="details hidden mt-2 text-sm">
            <p><strong>行わない行動：</strong>${item.avoid}</p>
            <p><strong>工夫：</strong>${item.idea}</p>
          </div>
        `;
        container.appendChild(card);
      });
    }

    function filterCards(type) {
      const cards = document.querySelectorAll('.card');
      cards.forEach(card => {
        card.style.display = card.classList.contains(type) ? 'block' : 'none';
      });
    }

    window.onload = loadIdeas;
  </script>
</body>
</html>
